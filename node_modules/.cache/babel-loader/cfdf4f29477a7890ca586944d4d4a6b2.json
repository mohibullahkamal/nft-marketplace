{"ast":null,"code":"var _jsxFileName = \"/home/mo/newnewnew/nft-marketplace/src/frontend/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { ethers } from \"ethers\";\nimport { Row, Col, Card, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    marketplace,\n    nft\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([]);\n\n  const loadMarketplaceItems = async () => {\n    // Load all unsold items\n    const itemCount = await marketplace.itemCount();\n    let items = [];\n\n    for (let i = 1; i <= itemCount; i++) {\n      const item = await marketplace.items(i);\n\n      if (!item.sold) {\n        // get uri url from nft contract\n        const uri = await nft.tokenURI(item.tokenId); // use uri to fetch the nft metadata stored on ipfs \n\n        const response = await fetch(uri);\n        const metadata = await response.json(); // get total price of item (item price + fee)\n\n        const totalPrice = await marketplace.getTotalPrice(item.itemId); // Add item to items array\n\n        items.push({\n          totalPrice,\n          itemId: item.itemId,\n          seller: item.seller,\n          name: metadata.name,\n          description: metadata.description,\n          image: metadata.image\n        });\n      }\n    }\n\n    setLoading(false);\n    setItems(items);\n  };\n\n  const buyMarketItem = async item => {\n    await (await marketplace.purchaseItem(item.itemId, {\n      value: item.totalPrice\n    })).wait();\n    loadMarketplaceItems();\n  };\n\n  useEffect(() => {\n    loadMarketplaceItems();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"main\", {\n    style: {\n      padding: \"1rem 0\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center\",\n    children: items.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-5 container\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 2,\n        lg: 4,\n        className: \"g-4 py-5\",\n        children: items.map((item, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              color: \"secondary\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-grid\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => buyMarketItem(item),\n                  variant: \"primary\",\n                  size: \"lg\",\n                  children: [\"Buy for \", ethers.utils.formatEther(item.totalPrice), \" ETH\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        padding: \"1rem 0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No listed assets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"X4x04bf2XOIdWC9JIzBW7u2/seA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/mo/newnewnew/nft-marketplace/src/frontend/components/Home.js"],"names":["useState","useEffect","ethers","Row","Col","Card","Button","Home","marketplace","nft","loading","setLoading","items","setItems","loadMarketplaceItems","itemCount","i","item","sold","uri","tokenURI","tokenId","response","fetch","metadata","json","totalPrice","getTotalPrice","itemId","push","seller","name","description","image","buyMarketItem","purchaseItem","value","wait","padding","length","map","idx","utils","formatEther"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { ethers } from \"ethers\"\nimport { Row, Col, Card, Button } from 'react-bootstrap'\n\nconst Home = ({ marketplace, nft }) => {\n  const [loading, setLoading] = useState(true)\n  const [items, setItems] = useState([])\n  const loadMarketplaceItems = async () => {\n    // Load all unsold items\n    const itemCount = await marketplace.itemCount()\n    let items = []\n    for (let i = 1; i <= itemCount; i++) {\n      const item = await marketplace.items(i)\n      if (!item.sold) {\n        // get uri url from nft contract\n        const uri = await nft.tokenURI(item.tokenId)\n        // use uri to fetch the nft metadata stored on ipfs \n        const response = await fetch(uri)\n        const metadata = await response.json()\n        // get total price of item (item price + fee)\n        const totalPrice = await marketplace.getTotalPrice(item.itemId)\n        // Add item to items array\n        items.push({\n          totalPrice,\n          itemId: item.itemId,\n          seller: item.seller,\n          name: metadata.name,\n          description: metadata.description,\n          image: metadata.image\n        })\n      }\n    }\n    setLoading(false)\n    setItems(items)\n  }\n\n  const buyMarketItem = async (item) => {\n    await (await marketplace.purchaseItem(item.itemId, { value: item.totalPrice })).wait()\n    loadMarketplaceItems()\n  }\n\n  useEffect(() => {\n    loadMarketplaceItems()\n  }, [])\n  if (loading) return (\n    <main style={{ padding: \"1rem 0\" }}>\n      <h2>Loading...</h2>\n    </main>\n  )\n  return (\n    <div className=\"flex justify-center\">\n      {items.length > 0 ?\n        <div className=\"px-5 container\">\n          <Row xs={1} md={2} lg={4} className=\"g-4 py-5\">\n            {items.map((item, idx) => (\n              <Col key={idx} className=\"overflow-hidden\">\n                <Card>\n                  <Card.Img variant=\"top\" src={item.image} />\n                  <Card.Body color=\"secondary\">\n                    <Card.Title>{item.name}</Card.Title>\n                    <Card.Text>\n                      {item.description}\n                    </Card.Text>\n                  </Card.Body>\n                  <Card.Footer>\n                    <div className='d-grid'>\n                      <Button onClick={() => buyMarketItem(item)} variant=\"primary\" size=\"lg\">\n                        Buy for {ethers.utils.formatEther(item.totalPrice)} ETH\n                      </Button>\n                    </div>\n                  </Card.Footer>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </div>\n        : (\n          <main style={{ padding: \"1rem 0\" }}>\n            <h2>No listed assets</h2>\n          </main>\n        )}\n    </div>\n  );\n}\nexport default Home"]},"metadata":{},"sourceType":"module"}